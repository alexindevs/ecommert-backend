// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int        @id @default(autoincrement())
  username    String     @unique
  email       String     @unique
  password    String
  firstName   String
  lastName    String
  isAdmin     Boolean    @default(false)
  isBlocked   Boolean    @default(false)
  isVerified  Boolean    @default(false)
  profileImage String?
  createdAt   DateTime   @default(now()) @db.Timestamp(6)
  updatedAt   DateTime   @updatedAt @default(now()) @db.Timestamp(6)
  
  // Relationships
  // addresses   Address[]
  // orders      Order[]

  reviews     Review[] 
  refreshTokens RefreshToken[]
  profile       Profile?
  products      Product[]
}

model RefreshToken {
  id         Int    @id @default(autoincrement())
  userId     Int       @unique
  token      String    @unique
  createdAt  DateTime  @default(now()) @db.Timestamp(6)
  updatedAt  DateTime  @updatedAt @default(now()) @db.Timestamp(6)

  user       User      @relation(fields: [userId], references: [id])
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  price       Float
  stock       Int       @default(0)
  likes       Int       @default(0)
  image       String
  createdAt   DateTime  @default(now()) @db.Timestamp(6)
  updatedAt   DateTime  @updatedAt @default(now()) @db.Timestamp(6)
  userId      Int

  cart        Cart[]
  reviews     Review[]
  user        User      @relation(fields: [userId], references: [id])
}

model Review {
  id          Int       @id @default(autoincrement())
  userId      Int
  productId   Int
  rating      Int
  comment     String
  createdAt   DateTime  @default(now()) @db.Timestamp(6)

  // Relationships
  @@unique([userId, productId])
  user        User      @relation(fields: [userId], references: [id])
  product     Product   @relation(fields: [productId], references: [id])
}

model Cart {
  id          Int       @id @default(autoincrement())
  userId      Int
  products    Product[]
  total       Float
}

model Profile {
  id          Int       @id @default(autoincrement())
  userId      Int       @unique
  address     String
  city        String
  postalCode  String
  country     String
  phoneNumber String
  createdAt   DateTime  @default(now()) @db.Timestamp(6)
  updatedAt   DateTime  @updatedAt @default(now()) @db.Timestamp(6)

  // Relationships
  user        User      @relation(fields: [userId], references: [id])
}